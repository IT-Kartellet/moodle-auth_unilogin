<?php
// This file is part of Moodle - http://moodle.org/
//
// Moodle is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// Moodle is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.

/**
 * @package    auth_unilogin
 * @copyright  2014 IT Kartellet
 * @license    MIT
 */

defined('MOODLE_INTERNAL') || die();

require_once($CFG->libdir.'/authlib.php');

/**
 * Plugin for UNI login authentication
 */
class auth_plugin_unilogin extends auth_plugin_base {
    /**
     * Constructor.
     */
    function auth_plugin_unilogin() {
        $this->authtype = 'unilogin';
        $this->config = get_config('auth_unilogin');
    }

    function loginpage_hook() {
        echo 'woot';
    }

    function user_login($username, $password) {
        // if true, user_login was initiated by unilogin/callback.php
        if(isset($GLOBALS['unilogin_in_progress']) && $GLOBALS['unilogin_in_progress'] === true) {
            unset($GLOBALS['unilogin_in_progress']);
            return true;
        }

        return false;
    }

    function get_userinfo($username) {
        // Query the webservice for user info http://stil.dk/~/media/UNIC/Filer/Publikationer/Tekniske%20vejledninger/uni-login-infotjenestenswebservice_ws02.pdf
    }

    private function get_url($action = 'login') {
        $prefix = $this->config->auth_type;
        $base = "https://{$prefix}.emu.dk/";

        switch ($action) {
            case 'login':
                $id = $this->config->id;
                $path = $this->encode_return_url();
                $auth = $this->encode_auth($path);
                return $base . 'unilogin/login.cgi?id={$id}&path=$path&auth=$auth';
            case 'logout':
                return $base . 'logout';
        }
    }

    private function encode_return_url() {
        global $CFG;

        // TODO something something url
        return urlencode(base64_encode($CFG->wwwroot . '/auth/unilogin/callback.php'));
    }

    private function encode_auth($path) {
        return md5($path . $this->config->secret);
    }

    function validate_ticket($user, $timestamp, $auth) {
        $fingerprint = md5($timestamp . $this->config->secret . $user);
        if ($fingerprint !== $auth) {
            return false;
        }

        if ($this->config->validation_behaviour === 'db') {
            global $DB;

            if ($DB->record_exists('unilogin_tickets', array('ticket' => $auth))) {
                return false;
            }

            $DB->insert_record('unilogin_tickets', array('ticket' => $auth));
        } else {
            $timestamp = strtotime('YYYYMMDDhhmmss', $timestamp);
            return (time() - $this->config->validatetime) < $timestamp;
        }
    }    

    function logoutpage_hook() {
        require_logout();

        redirect('https://sso.emu.dk/logout');
    }

    function is_internal() {
        return false;
    }

    function config_form($config, $err, $user_fields) {
        include "config.php";
    }

    function process_config($config) {
        foreach ((array)$config as $name => $value) {
            if (strstr($name, 's_auth_unilogin_')) {
                // This string prefix is generated by using the admin_setting_X classes - we just need the plain name
                $name = str_replace('s_auth_unilogin_', '', $name);
                set_config($name, $value, 'auth_unilogin');
            }
        }
    }

    function can_change_password() {
        return true;
    }

    function change_password_url() {
        return 'https://login.emu.dk/';
    }
}
